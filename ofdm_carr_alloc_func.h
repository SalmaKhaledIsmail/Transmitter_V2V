/*
 * ofdm_carr_alloc_func.h
 *
 *  Created on: Feb 24, 2017
 *      Author: elnag
 */

#ifndef OFDM_CARR_ALLOC_FUNC_H_
#define OFDM_CARR_ALLOC_FUNC_H_
//////////////////standard def//////////////////////////////////
/*----------------------------------------------------------All are form the standard definition------------------------------------------------------------------------*/
int occupied_carriers[48] = { -26, -25, -24, -23, -22, -20, -19, -18, -17, -16,
		-15, -14, -13, -12, -11, -10, -9, -8, -6, -5, -4, -3, -2, -1, 1, 2, 3,
		4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24,
		25, 26 };
int pilot_carriers[4] = { -21, -7, 7, 21 };

float pilot_sympols[] = {1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, 1,0, 1,0, 1,0, -1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1,0, -1,0, -1,0, -1,0, 1
 };
float sync_words[] = { 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0,
		0.0, 0, 1.4719601443879746, +1.4719601443879746, 0.0, 0, 0.0, 0, 0.0, 0,
		-1.4719601443879746, -1.4719601443879746, 0.0, 0, 0.0, 0, 0.0, 0,
		1.4719601443879746, +1.4719601443879746, 0.0, 0, 0.0, 0, 0.0, 0,
		-1.4719601443879746, -1.4719601443879746, 0.0, 0, 0.0, 0, 0.0, 0,
		-1.4719601443879746, -1.4719601443879746, 0.0, 0, 0.0, 0, 0.0, 0,
		1.4719601443879746, +1.4719601443879746, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0,
		0.0, 0, 0.0, 0, 0.0, 0, -1.4719601443879746, -1.4719601443879746, 0.0,
		0, 0.0, 0, 0.0, 0, -1.4719601443879746, -1.4719601443879746, 0.0, 0,
		0.0, 0, 0.0, 0, 1.4719601443879746, +1.4719601443879746, 0.0, 0, 0.0, 0,
		0.0, 0, 1.4719601443879746, +1.4719601443879746, 0.0, 0, 0.0, 0, 0.0, 0,
		1.4719601443879746, +1.4719601443879746, 0.0, 0, 0.0, 0, 0.0, 0,
		1.4719601443879746, +1.4719601443879746, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0,
		0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0,
		0.0, 0, 0.0, 0, 1.4719601443879746, +1.4719601443879746, 0.0, 0, 0.0, 0,
		0.0, 0, -1.4719601443879746, -1.4719601443879746, 0.0, 0, 0.0, 0, 0.0,
		0, 1.4719601443879746, +1.4719601443879746, 0.0, 0, 0.0, 0, 0.0, 0,
		-1.4719601443879746, -1.4719601443879746, 0.0, 0, 0.0, 0, 0.0, 0,
		-1.4719601443879746, -1.4719601443879746, 0.0, 0, 0.0, 0, 0.0, 0,
		1.4719601443879746, +1.4719601443879746, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0,
		0.0, 0, 0.0, 0, 0.0, 0, -1.4719601443879746, -1.4719601443879746, 0.0,
		0, 0.0, 0, 0.0, 0, -1.4719601443879746, -1.4719601443879746, 0.0, 0,
		0.0, 0, 0.0, 0, 1.4719601443879746, +1.4719601443879746, 0.0, 0, 0.0, 0,
		0.0, 0, 1.4719601443879746, +1.4719601443879746, 0.0, 0, 0.0, 0, 0.0, 0,
		1.4719601443879746, +1.4719601443879746, 0.0, 0, 0.0, 0, 0.0, 0,
		1.4719601443879746, +1.4719601443879746, 0.0, 0, 0.0, 0, 0.0, 0, 0.0, 0,
		0.0, 0, 0.0, 0, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 1,
		-1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, -1, 1, 0, 0, 1, 1, 0, 0, -1, -1, 0,
		0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, -0, -1, 1, 0, 0, -1,
		-1, 0, 0, 1, 0, 0, 0, -1, 1, 0, -0, -1, 1, 0, 0, -1, 1, 0, 0, 1, -1, 0,
		0, -1, 1, 0, -0, -1, -1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1,
		-1, 0, 0, -1, 1, 0, 0, 1, 1, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, -1, 0, -1, 0, 1, 0,
		1, 0, -1, 0, 1, 0, -1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, -1, 0, -1,
		0, 1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0,
		-1, 0, -1, 0, 1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, -1, 0, -1, 0,
		-1, 0, -1, 0, 1, 0, 1, 0, -1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0,
		1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

int fft_len = 64;

int output_is_shifted = 1;

int ofdm_carr_alloc(int *occupied_carriers, int *pilot_carriers,
		float *pilot_sympols, float *sync_words, int fft_len,
		int output_is_shifted, float *input, float *output,
		int sizeof_input_sym);

#endif /* OFDM_CARR_ALLOC_FUNC_H_ */
